//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.02.28 at 10:41:42 AM MST 
//


package org.hl7.fhir.model.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.CodeableConcept;
import org.hl7.fhir.model.DateTime;
import org.hl7.fhir.model.Identifier;
import org.hl7.fhir.model.Order;
import org.hl7.fhir.model.OrderWhen;
import org.hl7.fhir.model.ResourceReference;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Order", propOrder = {
    "identifier",
    "date",
    "subject",
    "source",
    "target",
    "reasonCodeableConcept",
    "reasonResource",
    "authority",
    "when",
    "detail"
})
public class OrderImpl
    extends ResourceImpl
    implements Order, ToString
{

    @XmlElement(type = IdentifierImpl.class)
    protected List<Identifier> identifier;
    @XmlElement(type = DateTimeImpl.class)
    protected DateTimeImpl date;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl subject;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl source;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl target;
    @XmlElement(type = CodeableConceptImpl.class)
    protected CodeableConceptImpl reasonCodeableConcept;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl reasonResource;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl authority;
    @XmlElement(type = OrderWhenImpl.class)
    protected OrderWhenImpl when;
    @XmlElement(required = true, type = ResourceReferenceImpl.class)
    protected List<ResourceReference> detail;

    public List<Identifier> getIdentifier() {
        if (identifier == null) {
            identifier = new ArrayList<Identifier>();
        }
        return this.identifier;
    }

    public DateTime getDate() {
        return date;
    }

    public void setDate(DateTime value) {
        this.date = ((DateTimeImpl) value);
    }

    public ResourceReference getSubject() {
        return subject;
    }

    public void setSubject(ResourceReference value) {
        this.subject = ((ResourceReferenceImpl) value);
    }

    public ResourceReference getSource() {
        return source;
    }

    public void setSource(ResourceReference value) {
        this.source = ((ResourceReferenceImpl) value);
    }

    public ResourceReference getTarget() {
        return target;
    }

    public void setTarget(ResourceReference value) {
        this.target = ((ResourceReferenceImpl) value);
    }

    public CodeableConcept getReasonCodeableConcept() {
        return reasonCodeableConcept;
    }

    public void setReasonCodeableConcept(CodeableConcept value) {
        this.reasonCodeableConcept = ((CodeableConceptImpl) value);
    }

    public ResourceReference getReasonResource() {
        return reasonResource;
    }

    public void setReasonResource(ResourceReference value) {
        this.reasonResource = ((ResourceReferenceImpl) value);
    }

    public ResourceReference getAuthority() {
        return authority;
    }

    public void setAuthority(ResourceReference value) {
        this.authority = ((ResourceReferenceImpl) value);
    }

    public OrderWhen getWhen() {
        return when;
    }

    public void setWhen(OrderWhen value) {
        this.when = ((OrderWhenImpl) value);
    }

    public List<ResourceReference> getDetail() {
        if (detail == null) {
            detail = new ArrayList<ResourceReference>();
        }
        return this.detail;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            List<Identifier> theIdentifier;
            theIdentifier = (((this.identifier!= null)&&(!this.identifier.isEmpty()))?this.getIdentifier():null);
            strategy.appendField(locator, this, "identifier", buffer, theIdentifier);
        }
        {
            DateTime theDate;
            theDate = this.getDate();
            strategy.appendField(locator, this, "date", buffer, theDate);
        }
        {
            ResourceReference theSubject;
            theSubject = this.getSubject();
            strategy.appendField(locator, this, "subject", buffer, theSubject);
        }
        {
            ResourceReference theSource;
            theSource = this.getSource();
            strategy.appendField(locator, this, "source", buffer, theSource);
        }
        {
            ResourceReference theTarget;
            theTarget = this.getTarget();
            strategy.appendField(locator, this, "target", buffer, theTarget);
        }
        {
            CodeableConcept theReasonCodeableConcept;
            theReasonCodeableConcept = this.getReasonCodeableConcept();
            strategy.appendField(locator, this, "reasonCodeableConcept", buffer, theReasonCodeableConcept);
        }
        {
            ResourceReference theReasonResource;
            theReasonResource = this.getReasonResource();
            strategy.appendField(locator, this, "reasonResource", buffer, theReasonResource);
        }
        {
            ResourceReference theAuthority;
            theAuthority = this.getAuthority();
            strategy.appendField(locator, this, "authority", buffer, theAuthority);
        }
        {
            OrderWhen theWhen;
            theWhen = this.getWhen();
            strategy.appendField(locator, this, "when", buffer, theWhen);
        }
        {
            List<ResourceReference> theDetail;
            theDetail = (((this.detail!= null)&&(!this.detail.isEmpty()))?this.getDetail():null);
            strategy.appendField(locator, this, "detail", buffer, theDetail);
        }
        return buffer;
    }

}

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.02.28 at 10:41:42 AM MST 
//


package org.hl7.fhir.model.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Coding;
import org.hl7.fhir.model.DateTime;
import org.hl7.fhir.model.Identifier;
import org.hl7.fhir.model.ImagingModality;
import org.hl7.fhir.model.ImagingStudy;
import org.hl7.fhir.model.ImagingStudySeries;
import org.hl7.fhir.model.InstanceAvailability;
import org.hl7.fhir.model.Integer;
import org.hl7.fhir.model.Oid;
import org.hl7.fhir.model.ResourceReference;
import org.hl7.fhir.model.Uri;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ImagingStudy", propOrder = {
    "dateTime",
    "subject",
    "uid",
    "accessionNo",
    "identifier",
    "order",
    "modality",
    "referrer",
    "availability",
    "url",
    "numberOfSeries",
    "numberOfInstances",
    "clinicalInformation",
    "procedure",
    "interpreter",
    "description",
    "series"
})
public class ImagingStudyImpl
    extends ResourceImpl
    implements ImagingStudy, ToString
{

    @XmlElement(type = DateTimeImpl.class)
    protected DateTimeImpl dateTime;
    @XmlElement(required = true, type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl subject;
    @XmlElement(required = true, type = OidImpl.class)
    protected OidImpl uid;
    @XmlElement(type = IdentifierImpl.class)
    protected IdentifierImpl accessionNo;
    @XmlElement(type = IdentifierImpl.class)
    protected List<Identifier> identifier;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected List<ResourceReference> order;
    @XmlElement(type = ImagingModalityImpl.class)
    protected List<ImagingModality> modality;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl referrer;
    @XmlElement(type = InstanceAvailabilityImpl.class)
    protected InstanceAvailabilityImpl availability;
    @XmlElement(type = UriImpl.class)
    protected UriImpl url;
    @XmlElement(required = true, type = IntegerImpl.class)
    protected IntegerImpl numberOfSeries;
    @XmlElement(required = true, type = IntegerImpl.class)
    protected IntegerImpl numberOfInstances;
    @XmlElement(type = StringImpl.class)
    protected StringImpl clinicalInformation;
    @XmlElement(type = CodingImpl.class)
    protected List<Coding> procedure;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl interpreter;
    @XmlElement(type = StringImpl.class)
    protected StringImpl description;
    @XmlElement(type = ImagingStudySeriesImpl.class)
    protected List<ImagingStudySeries> series;

    public DateTime getDateTime() {
        return dateTime;
    }

    public void setDateTime(DateTime value) {
        this.dateTime = ((DateTimeImpl) value);
    }

    public ResourceReference getSubject() {
        return subject;
    }

    public void setSubject(ResourceReference value) {
        this.subject = ((ResourceReferenceImpl) value);
    }

    public Oid getUid() {
        return uid;
    }

    public void setUid(Oid value) {
        this.uid = ((OidImpl) value);
    }

    public Identifier getAccessionNo() {
        return accessionNo;
    }

    public void setAccessionNo(Identifier value) {
        this.accessionNo = ((IdentifierImpl) value);
    }

    public List<Identifier> getIdentifier() {
        if (identifier == null) {
            identifier = new ArrayList<Identifier>();
        }
        return this.identifier;
    }

    public List<ResourceReference> getOrder() {
        if (order == null) {
            order = new ArrayList<ResourceReference>();
        }
        return this.order;
    }

    public List<ImagingModality> getModality() {
        if (modality == null) {
            modality = new ArrayList<ImagingModality>();
        }
        return this.modality;
    }

    public ResourceReference getReferrer() {
        return referrer;
    }

    public void setReferrer(ResourceReference value) {
        this.referrer = ((ResourceReferenceImpl) value);
    }

    public InstanceAvailability getAvailability() {
        return availability;
    }

    public void setAvailability(InstanceAvailability value) {
        this.availability = ((InstanceAvailabilityImpl) value);
    }

    public Uri getUrl() {
        return url;
    }

    public void setUrl(Uri value) {
        this.url = ((UriImpl) value);
    }

    public Integer getNumberOfSeries() {
        return numberOfSeries;
    }

    public void setNumberOfSeries(Integer value) {
        this.numberOfSeries = ((IntegerImpl) value);
    }

    public Integer getNumberOfInstances() {
        return numberOfInstances;
    }

    public void setNumberOfInstances(Integer value) {
        this.numberOfInstances = ((IntegerImpl) value);
    }

    public org.hl7.fhir.model.String getClinicalInformation() {
        return clinicalInformation;
    }

    public void setClinicalInformation(org.hl7.fhir.model.String value) {
        this.clinicalInformation = ((StringImpl) value);
    }

    public List<Coding> getProcedure() {
        if (procedure == null) {
            procedure = new ArrayList<Coding>();
        }
        return this.procedure;
    }

    public ResourceReference getInterpreter() {
        return interpreter;
    }

    public void setInterpreter(ResourceReference value) {
        this.interpreter = ((ResourceReferenceImpl) value);
    }

    public org.hl7.fhir.model.String getDescription() {
        return description;
    }

    public void setDescription(org.hl7.fhir.model.String value) {
        this.description = ((StringImpl) value);
    }

    public List<ImagingStudySeries> getSeries() {
        if (series == null) {
            series = new ArrayList<ImagingStudySeries>();
        }
        return this.series;
    }

    public java.lang.String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            DateTime theDateTime;
            theDateTime = this.getDateTime();
            strategy.appendField(locator, this, "dateTime", buffer, theDateTime);
        }
        {
            ResourceReference theSubject;
            theSubject = this.getSubject();
            strategy.appendField(locator, this, "subject", buffer, theSubject);
        }
        {
            Oid theUid;
            theUid = this.getUid();
            strategy.appendField(locator, this, "uid", buffer, theUid);
        }
        {
            Identifier theAccessionNo;
            theAccessionNo = this.getAccessionNo();
            strategy.appendField(locator, this, "accessionNo", buffer, theAccessionNo);
        }
        {
            List<Identifier> theIdentifier;
            theIdentifier = (((this.identifier!= null)&&(!this.identifier.isEmpty()))?this.getIdentifier():null);
            strategy.appendField(locator, this, "identifier", buffer, theIdentifier);
        }
        {
            List<ResourceReference> theOrder;
            theOrder = (((this.order!= null)&&(!this.order.isEmpty()))?this.getOrder():null);
            strategy.appendField(locator, this, "order", buffer, theOrder);
        }
        {
            List<ImagingModality> theModality;
            theModality = (((this.modality!= null)&&(!this.modality.isEmpty()))?this.getModality():null);
            strategy.appendField(locator, this, "modality", buffer, theModality);
        }
        {
            ResourceReference theReferrer;
            theReferrer = this.getReferrer();
            strategy.appendField(locator, this, "referrer", buffer, theReferrer);
        }
        {
            InstanceAvailability theAvailability;
            theAvailability = this.getAvailability();
            strategy.appendField(locator, this, "availability", buffer, theAvailability);
        }
        {
            Uri theUrl;
            theUrl = this.getUrl();
            strategy.appendField(locator, this, "url", buffer, theUrl);
        }
        {
            Integer theNumberOfSeries;
            theNumberOfSeries = this.getNumberOfSeries();
            strategy.appendField(locator, this, "numberOfSeries", buffer, theNumberOfSeries);
        }
        {
            Integer theNumberOfInstances;
            theNumberOfInstances = this.getNumberOfInstances();
            strategy.appendField(locator, this, "numberOfInstances", buffer, theNumberOfInstances);
        }
        {
            org.hl7.fhir.model.String theClinicalInformation;
            theClinicalInformation = this.getClinicalInformation();
            strategy.appendField(locator, this, "clinicalInformation", buffer, theClinicalInformation);
        }
        {
            List<Coding> theProcedure;
            theProcedure = (((this.procedure!= null)&&(!this.procedure.isEmpty()))?this.getProcedure():null);
            strategy.appendField(locator, this, "procedure", buffer, theProcedure);
        }
        {
            ResourceReference theInterpreter;
            theInterpreter = this.getInterpreter();
            strategy.appendField(locator, this, "interpreter", buffer, theInterpreter);
        }
        {
            org.hl7.fhir.model.String theDescription;
            theDescription = this.getDescription();
            strategy.appendField(locator, this, "description", buffer, theDescription);
        }
        {
            List<ImagingStudySeries> theSeries;
            theSeries = (((this.series!= null)&&(!this.series.isEmpty()))?this.getSeries():null);
            strategy.appendField(locator, this, "series", buffer, theSeries);
        }
        return buffer;
    }

}

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.02.28 at 10:41:42 AM MST 
//


package org.hl7.fhir.model.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Extension;
import org.hl7.fhir.model.Integer;
import org.hl7.fhir.model.QueryOutcome;
import org.hl7.fhir.model.QueryResponse;
import org.hl7.fhir.model.ResourceReference;
import org.hl7.fhir.model.Uri;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Query.Response", propOrder = {
    "identifier",
    "outcome",
    "total",
    "parameter",
    "first",
    "previous",
    "next",
    "last",
    "reference"
})
public class QueryResponseImpl
    extends BackboneElementImpl
    implements QueryResponse, ToString
{

    @XmlElement(required = true, type = UriImpl.class)
    protected UriImpl identifier;
    @XmlElement(required = true, type = QueryOutcomeImpl.class)
    protected QueryOutcomeImpl outcome;
    @XmlElement(type = IntegerImpl.class)
    protected IntegerImpl total;
    @XmlElement(type = ExtensionImpl.class)
    protected List<Extension> parameter;
    @XmlElement(type = ExtensionImpl.class)
    protected List<Extension> first;
    @XmlElement(type = ExtensionImpl.class)
    protected List<Extension> previous;
    @XmlElement(type = ExtensionImpl.class)
    protected List<Extension> next;
    @XmlElement(type = ExtensionImpl.class)
    protected List<Extension> last;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected List<ResourceReference> reference;

    public Uri getIdentifier() {
        return identifier;
    }

    public void setIdentifier(Uri value) {
        this.identifier = ((UriImpl) value);
    }

    public QueryOutcome getOutcome() {
        return outcome;
    }

    public void setOutcome(QueryOutcome value) {
        this.outcome = ((QueryOutcomeImpl) value);
    }

    public Integer getTotal() {
        return total;
    }

    public void setTotal(Integer value) {
        this.total = ((IntegerImpl) value);
    }

    public List<Extension> getParameter() {
        if (parameter == null) {
            parameter = new ArrayList<Extension>();
        }
        return this.parameter;
    }

    public List<Extension> getFirst() {
        if (first == null) {
            first = new ArrayList<Extension>();
        }
        return this.first;
    }

    public List<Extension> getPrevious() {
        if (previous == null) {
            previous = new ArrayList<Extension>();
        }
        return this.previous;
    }

    public List<Extension> getNext() {
        if (next == null) {
            next = new ArrayList<Extension>();
        }
        return this.next;
    }

    public List<Extension> getLast() {
        if (last == null) {
            last = new ArrayList<Extension>();
        }
        return this.last;
    }

    public List<ResourceReference> getReference() {
        if (reference == null) {
            reference = new ArrayList<ResourceReference>();
        }
        return this.reference;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            Uri theIdentifier;
            theIdentifier = this.getIdentifier();
            strategy.appendField(locator, this, "identifier", buffer, theIdentifier);
        }
        {
            QueryOutcome theOutcome;
            theOutcome = this.getOutcome();
            strategy.appendField(locator, this, "outcome", buffer, theOutcome);
        }
        {
            Integer theTotal;
            theTotal = this.getTotal();
            strategy.appendField(locator, this, "total", buffer, theTotal);
        }
        {
            List<Extension> theParameter;
            theParameter = (((this.parameter!= null)&&(!this.parameter.isEmpty()))?this.getParameter():null);
            strategy.appendField(locator, this, "parameter", buffer, theParameter);
        }
        {
            List<Extension> theFirst;
            theFirst = (((this.first!= null)&&(!this.first.isEmpty()))?this.getFirst():null);
            strategy.appendField(locator, this, "first", buffer, theFirst);
        }
        {
            List<Extension> thePrevious;
            thePrevious = (((this.previous!= null)&&(!this.previous.isEmpty()))?this.getPrevious():null);
            strategy.appendField(locator, this, "previous", buffer, thePrevious);
        }
        {
            List<Extension> theNext;
            theNext = (((this.next!= null)&&(!this.next.isEmpty()))?this.getNext():null);
            strategy.appendField(locator, this, "next", buffer, theNext);
        }
        {
            List<Extension> theLast;
            theLast = (((this.last!= null)&&(!this.last.isEmpty()))?this.getLast():null);
            strategy.appendField(locator, this, "last", buffer, theLast);
        }
        {
            List<ResourceReference> theReference;
            theReference = (((this.reference!= null)&&(!this.reference.isEmpty()))?this.getReference():null);
            strategy.appendField(locator, this, "reference", buffer, theReference);
        }
        return buffer;
    }

}

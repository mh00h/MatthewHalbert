//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.02.28 at 10:41:42 AM MST 
//


package org.hl7.fhir.model.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Boolean;
import org.hl7.fhir.model.CodeableConcept;
import org.hl7.fhir.model.Date;
import org.hl7.fhir.model.DateTime;
import org.hl7.fhir.model.Identifier;
import org.hl7.fhir.model.Immunization;
import org.hl7.fhir.model.ImmunizationExplanation;
import org.hl7.fhir.model.ImmunizationReaction;
import org.hl7.fhir.model.ImmunizationVaccinationProtocol;
import org.hl7.fhir.model.Quantity;
import org.hl7.fhir.model.ResourceReference;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Immunization", propOrder = {
    "identifier",
    "date",
    "vaccineType",
    "subject",
    "refusedIndicator",
    "reported",
    "performer",
    "requester",
    "manufacturer",
    "location",
    "lotNumber",
    "expirationDate",
    "site",
    "route",
    "doseQuantity",
    "explanation",
    "reaction",
    "vaccinationProtocol"
})
public class ImmunizationImpl
    extends ResourceImpl
    implements Immunization, ToString
{

    @XmlElement(type = IdentifierImpl.class)
    protected List<Identifier> identifier;
    @XmlElement(required = true, type = DateTimeImpl.class)
    protected DateTimeImpl date;
    @XmlElement(required = true, type = CodeableConceptImpl.class)
    protected CodeableConceptImpl vaccineType;
    @XmlElement(required = true, type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl subject;
    @XmlElement(required = true, type = BooleanImpl.class)
    protected BooleanImpl refusedIndicator;
    @XmlElement(required = true, type = BooleanImpl.class)
    protected BooleanImpl reported;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl performer;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl requester;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl manufacturer;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl location;
    @XmlElement(type = StringImpl.class)
    protected StringImpl lotNumber;
    @XmlElement(type = DateImpl.class)
    protected DateImpl expirationDate;
    @XmlElement(type = CodeableConceptImpl.class)
    protected CodeableConceptImpl site;
    @XmlElement(type = CodeableConceptImpl.class)
    protected CodeableConceptImpl route;
    @XmlElement(type = QuantityImpl.class)
    protected QuantityImpl doseQuantity;
    @XmlElement(type = ImmunizationExplanationImpl.class)
    protected ImmunizationExplanationImpl explanation;
    @XmlElement(type = ImmunizationReactionImpl.class)
    protected List<ImmunizationReaction> reaction;
    @XmlElement(type = ImmunizationVaccinationProtocolImpl.class)
    protected List<ImmunizationVaccinationProtocol> vaccinationProtocol;

    public List<Identifier> getIdentifier() {
        if (identifier == null) {
            identifier = new ArrayList<Identifier>();
        }
        return this.identifier;
    }

    public DateTime getDate() {
        return date;
    }

    public void setDate(DateTime value) {
        this.date = ((DateTimeImpl) value);
    }

    public CodeableConcept getVaccineType() {
        return vaccineType;
    }

    public void setVaccineType(CodeableConcept value) {
        this.vaccineType = ((CodeableConceptImpl) value);
    }

    public ResourceReference getSubject() {
        return subject;
    }

    public void setSubject(ResourceReference value) {
        this.subject = ((ResourceReferenceImpl) value);
    }

    public Boolean getRefusedIndicator() {
        return refusedIndicator;
    }

    public void setRefusedIndicator(Boolean value) {
        this.refusedIndicator = ((BooleanImpl) value);
    }

    public Boolean getReported() {
        return reported;
    }

    public void setReported(Boolean value) {
        this.reported = ((BooleanImpl) value);
    }

    public ResourceReference getPerformer() {
        return performer;
    }

    public void setPerformer(ResourceReference value) {
        this.performer = ((ResourceReferenceImpl) value);
    }

    public ResourceReference getRequester() {
        return requester;
    }

    public void setRequester(ResourceReference value) {
        this.requester = ((ResourceReferenceImpl) value);
    }

    public ResourceReference getManufacturer() {
        return manufacturer;
    }

    public void setManufacturer(ResourceReference value) {
        this.manufacturer = ((ResourceReferenceImpl) value);
    }

    public ResourceReference getLocation() {
        return location;
    }

    public void setLocation(ResourceReference value) {
        this.location = ((ResourceReferenceImpl) value);
    }

    public org.hl7.fhir.model.String getLotNumber() {
        return lotNumber;
    }

    public void setLotNumber(org.hl7.fhir.model.String value) {
        this.lotNumber = ((StringImpl) value);
    }

    public Date getExpirationDate() {
        return expirationDate;
    }

    public void setExpirationDate(Date value) {
        this.expirationDate = ((DateImpl) value);
    }

    public CodeableConcept getSite() {
        return site;
    }

    public void setSite(CodeableConcept value) {
        this.site = ((CodeableConceptImpl) value);
    }

    public CodeableConcept getRoute() {
        return route;
    }

    public void setRoute(CodeableConcept value) {
        this.route = ((CodeableConceptImpl) value);
    }

    public Quantity getDoseQuantity() {
        return doseQuantity;
    }

    public void setDoseQuantity(Quantity value) {
        this.doseQuantity = ((QuantityImpl) value);
    }

    public ImmunizationExplanation getExplanation() {
        return explanation;
    }

    public void setExplanation(ImmunizationExplanation value) {
        this.explanation = ((ImmunizationExplanationImpl) value);
    }

    public List<ImmunizationReaction> getReaction() {
        if (reaction == null) {
            reaction = new ArrayList<ImmunizationReaction>();
        }
        return this.reaction;
    }

    public List<ImmunizationVaccinationProtocol> getVaccinationProtocol() {
        if (vaccinationProtocol == null) {
            vaccinationProtocol = new ArrayList<ImmunizationVaccinationProtocol>();
        }
        return this.vaccinationProtocol;
    }

    public java.lang.String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            List<Identifier> theIdentifier;
            theIdentifier = (((this.identifier!= null)&&(!this.identifier.isEmpty()))?this.getIdentifier():null);
            strategy.appendField(locator, this, "identifier", buffer, theIdentifier);
        }
        {
            DateTime theDate;
            theDate = this.getDate();
            strategy.appendField(locator, this, "date", buffer, theDate);
        }
        {
            CodeableConcept theVaccineType;
            theVaccineType = this.getVaccineType();
            strategy.appendField(locator, this, "vaccineType", buffer, theVaccineType);
        }
        {
            ResourceReference theSubject;
            theSubject = this.getSubject();
            strategy.appendField(locator, this, "subject", buffer, theSubject);
        }
        {
            Boolean theRefusedIndicator;
            theRefusedIndicator = this.getRefusedIndicator();
            strategy.appendField(locator, this, "refusedIndicator", buffer, theRefusedIndicator);
        }
        {
            Boolean theReported;
            theReported = this.getReported();
            strategy.appendField(locator, this, "reported", buffer, theReported);
        }
        {
            ResourceReference thePerformer;
            thePerformer = this.getPerformer();
            strategy.appendField(locator, this, "performer", buffer, thePerformer);
        }
        {
            ResourceReference theRequester;
            theRequester = this.getRequester();
            strategy.appendField(locator, this, "requester", buffer, theRequester);
        }
        {
            ResourceReference theManufacturer;
            theManufacturer = this.getManufacturer();
            strategy.appendField(locator, this, "manufacturer", buffer, theManufacturer);
        }
        {
            ResourceReference theLocation;
            theLocation = this.getLocation();
            strategy.appendField(locator, this, "location", buffer, theLocation);
        }
        {
            org.hl7.fhir.model.String theLotNumber;
            theLotNumber = this.getLotNumber();
            strategy.appendField(locator, this, "lotNumber", buffer, theLotNumber);
        }
        {
            Date theExpirationDate;
            theExpirationDate = this.getExpirationDate();
            strategy.appendField(locator, this, "expirationDate", buffer, theExpirationDate);
        }
        {
            CodeableConcept theSite;
            theSite = this.getSite();
            strategy.appendField(locator, this, "site", buffer, theSite);
        }
        {
            CodeableConcept theRoute;
            theRoute = this.getRoute();
            strategy.appendField(locator, this, "route", buffer, theRoute);
        }
        {
            Quantity theDoseQuantity;
            theDoseQuantity = this.getDoseQuantity();
            strategy.appendField(locator, this, "doseQuantity", buffer, theDoseQuantity);
        }
        {
            ImmunizationExplanation theExplanation;
            theExplanation = this.getExplanation();
            strategy.appendField(locator, this, "explanation", buffer, theExplanation);
        }
        {
            List<ImmunizationReaction> theReaction;
            theReaction = (((this.reaction!= null)&&(!this.reaction.isEmpty()))?this.getReaction():null);
            strategy.appendField(locator, this, "reaction", buffer, theReaction);
        }
        {
            List<ImmunizationVaccinationProtocol> theVaccinationProtocol;
            theVaccinationProtocol = (((this.vaccinationProtocol!= null)&&(!this.vaccinationProtocol.isEmpty()))?this.getVaccinationProtocol():null);
            strategy.appendField(locator, this, "vaccinationProtocol", buffer, theVaccinationProtocol);
        }
        return buffer;
    }

}

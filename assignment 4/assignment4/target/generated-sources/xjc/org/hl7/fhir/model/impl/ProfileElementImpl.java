//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.02.28 at 10:41:42 AM MST 
//


package org.hl7.fhir.model.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.ProfileDefinition;
import org.hl7.fhir.model.ProfileElement;
import org.hl7.fhir.model.ProfileSlicing;
import org.hl7.fhir.model.PropertyRepresentation;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Profile.Element", propOrder = {
    "path",
    "representation",
    "name",
    "slicing",
    "definition"
})
public class ProfileElementImpl
    extends BackboneElementImpl
    implements ProfileElement, ToString
{

    @XmlElement(required = true, type = StringImpl.class)
    protected StringImpl path;
    @XmlElement(type = PropertyRepresentationImpl.class)
    protected List<PropertyRepresentation> representation;
    @XmlElement(type = StringImpl.class)
    protected StringImpl name;
    @XmlElement(type = ProfileSlicingImpl.class)
    protected ProfileSlicingImpl slicing;
    @XmlElement(type = ProfileDefinitionImpl.class)
    protected ProfileDefinitionImpl definition;

    public org.hl7.fhir.model.String getPath() {
        return path;
    }

    public void setPath(org.hl7.fhir.model.String value) {
        this.path = ((StringImpl) value);
    }

    public List<PropertyRepresentation> getRepresentation() {
        if (representation == null) {
            representation = new ArrayList<PropertyRepresentation>();
        }
        return this.representation;
    }

    public org.hl7.fhir.model.String getName() {
        return name;
    }

    public void setName(org.hl7.fhir.model.String value) {
        this.name = ((StringImpl) value);
    }

    public ProfileSlicing getSlicing() {
        return slicing;
    }

    public void setSlicing(ProfileSlicing value) {
        this.slicing = ((ProfileSlicingImpl) value);
    }

    public ProfileDefinition getDefinition() {
        return definition;
    }

    public void setDefinition(ProfileDefinition value) {
        this.definition = ((ProfileDefinitionImpl) value);
    }

    public java.lang.String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            org.hl7.fhir.model.String thePath;
            thePath = this.getPath();
            strategy.appendField(locator, this, "path", buffer, thePath);
        }
        {
            List<PropertyRepresentation> theRepresentation;
            theRepresentation = (((this.representation!= null)&&(!this.representation.isEmpty()))?this.getRepresentation():null);
            strategy.appendField(locator, this, "representation", buffer, theRepresentation);
        }
        {
            org.hl7.fhir.model.String theName;
            theName = this.getName();
            strategy.appendField(locator, this, "name", buffer, theName);
        }
        {
            ProfileSlicing theSlicing;
            theSlicing = this.getSlicing();
            strategy.appendField(locator, this, "slicing", buffer, theSlicing);
        }
        {
            ProfileDefinition theDefinition;
            theDefinition = this.getDefinition();
            strategy.appendField(locator, this, "definition", buffer, theDefinition);
        }
        return buffer;
    }

}

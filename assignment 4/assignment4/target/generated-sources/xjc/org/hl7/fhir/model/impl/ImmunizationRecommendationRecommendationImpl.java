//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.02.28 at 10:41:42 AM MST 
//


package org.hl7.fhir.model.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.CodeableConcept;
import org.hl7.fhir.model.DateTime;
import org.hl7.fhir.model.ImmunizationRecommendationDateCriterion;
import org.hl7.fhir.model.ImmunizationRecommendationProtocol;
import org.hl7.fhir.model.ImmunizationRecommendationRecommendation;
import org.hl7.fhir.model.Integer;
import org.hl7.fhir.model.ResourceReference;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ImmunizationRecommendation.Recommendation", propOrder = {
    "date",
    "vaccineType",
    "doseNumber",
    "forecastStatus",
    "dateCriterion",
    "protocol",
    "supportingImmunization",
    "supportingPatientInformation"
})
public class ImmunizationRecommendationRecommendationImpl
    extends BackboneElementImpl
    implements ImmunizationRecommendationRecommendation, ToString
{

    @XmlElement(required = true, type = DateTimeImpl.class)
    protected DateTimeImpl date;
    @XmlElement(required = true, type = CodeableConceptImpl.class)
    protected CodeableConceptImpl vaccineType;
    @XmlElement(type = IntegerImpl.class)
    protected IntegerImpl doseNumber;
    @XmlElement(required = true, type = CodeableConceptImpl.class)
    protected CodeableConceptImpl forecastStatus;
    @XmlElement(type = ImmunizationRecommendationDateCriterionImpl.class)
    protected List<ImmunizationRecommendationDateCriterion> dateCriterion;
    @XmlElement(type = ImmunizationRecommendationProtocolImpl.class)
    protected ImmunizationRecommendationProtocolImpl protocol;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected List<ResourceReference> supportingImmunization;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected List<ResourceReference> supportingPatientInformation;

    public DateTime getDate() {
        return date;
    }

    public void setDate(DateTime value) {
        this.date = ((DateTimeImpl) value);
    }

    public CodeableConcept getVaccineType() {
        return vaccineType;
    }

    public void setVaccineType(CodeableConcept value) {
        this.vaccineType = ((CodeableConceptImpl) value);
    }

    public Integer getDoseNumber() {
        return doseNumber;
    }

    public void setDoseNumber(Integer value) {
        this.doseNumber = ((IntegerImpl) value);
    }

    public CodeableConcept getForecastStatus() {
        return forecastStatus;
    }

    public void setForecastStatus(CodeableConcept value) {
        this.forecastStatus = ((CodeableConceptImpl) value);
    }

    public List<ImmunizationRecommendationDateCriterion> getDateCriterion() {
        if (dateCriterion == null) {
            dateCriterion = new ArrayList<ImmunizationRecommendationDateCriterion>();
        }
        return this.dateCriterion;
    }

    public ImmunizationRecommendationProtocol getProtocol() {
        return protocol;
    }

    public void setProtocol(ImmunizationRecommendationProtocol value) {
        this.protocol = ((ImmunizationRecommendationProtocolImpl) value);
    }

    public List<ResourceReference> getSupportingImmunization() {
        if (supportingImmunization == null) {
            supportingImmunization = new ArrayList<ResourceReference>();
        }
        return this.supportingImmunization;
    }

    public List<ResourceReference> getSupportingPatientInformation() {
        if (supportingPatientInformation == null) {
            supportingPatientInformation = new ArrayList<ResourceReference>();
        }
        return this.supportingPatientInformation;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            DateTime theDate;
            theDate = this.getDate();
            strategy.appendField(locator, this, "date", buffer, theDate);
        }
        {
            CodeableConcept theVaccineType;
            theVaccineType = this.getVaccineType();
            strategy.appendField(locator, this, "vaccineType", buffer, theVaccineType);
        }
        {
            Integer theDoseNumber;
            theDoseNumber = this.getDoseNumber();
            strategy.appendField(locator, this, "doseNumber", buffer, theDoseNumber);
        }
        {
            CodeableConcept theForecastStatus;
            theForecastStatus = this.getForecastStatus();
            strategy.appendField(locator, this, "forecastStatus", buffer, theForecastStatus);
        }
        {
            List<ImmunizationRecommendationDateCriterion> theDateCriterion;
            theDateCriterion = (((this.dateCriterion!= null)&&(!this.dateCriterion.isEmpty()))?this.getDateCriterion():null);
            strategy.appendField(locator, this, "dateCriterion", buffer, theDateCriterion);
        }
        {
            ImmunizationRecommendationProtocol theProtocol;
            theProtocol = this.getProtocol();
            strategy.appendField(locator, this, "protocol", buffer, theProtocol);
        }
        {
            List<ResourceReference> theSupportingImmunization;
            theSupportingImmunization = (((this.supportingImmunization!= null)&&(!this.supportingImmunization.isEmpty()))?this.getSupportingImmunization():null);
            strategy.appendField(locator, this, "supportingImmunization", buffer, theSupportingImmunization);
        }
        {
            List<ResourceReference> theSupportingPatientInformation;
            theSupportingPatientInformation = (((this.supportingPatientInformation!= null)&&(!this.supportingPatientInformation.isEmpty()))?this.getSupportingPatientInformation():null);
            strategy.appendField(locator, this, "supportingPatientInformation", buffer, theSupportingPatientInformation);
        }
        return buffer;
    }

}

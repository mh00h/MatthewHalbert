//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.02.28 at 10:41:42 AM MST 
//


package org.hl7.fhir.model.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Coding;
import org.hl7.fhir.model.SecurityEventSource;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SecurityEvent.Source", propOrder = {
    "site",
    "identifier",
    "type"
})
public class SecurityEventSourceImpl
    extends BackboneElementImpl
    implements SecurityEventSource, ToString
{

    @XmlElement(type = StringImpl.class)
    protected StringImpl site;
    @XmlElement(required = true, type = StringImpl.class)
    protected StringImpl identifier;
    @XmlElement(type = CodingImpl.class)
    protected List<Coding> type;

    public org.hl7.fhir.model.String getSite() {
        return site;
    }

    public void setSite(org.hl7.fhir.model.String value) {
        this.site = ((StringImpl) value);
    }

    public org.hl7.fhir.model.String getIdentifier() {
        return identifier;
    }

    public void setIdentifier(org.hl7.fhir.model.String value) {
        this.identifier = ((StringImpl) value);
    }

    public List<Coding> getType() {
        if (type == null) {
            type = new ArrayList<Coding>();
        }
        return this.type;
    }

    public java.lang.String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            org.hl7.fhir.model.String theSite;
            theSite = this.getSite();
            strategy.appendField(locator, this, "site", buffer, theSite);
        }
        {
            org.hl7.fhir.model.String theIdentifier;
            theIdentifier = this.getIdentifier();
            strategy.appendField(locator, this, "identifier", buffer, theIdentifier);
        }
        {
            List<Coding> theType;
            theType = (((this.type!= null)&&(!this.type.isEmpty()))?this.getType():null);
            strategy.appendField(locator, this, "type", buffer, theType);
        }
        return buffer;
    }

}

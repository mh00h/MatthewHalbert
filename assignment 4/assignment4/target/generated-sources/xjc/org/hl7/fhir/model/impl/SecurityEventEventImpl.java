//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.02.28 at 10:41:42 AM MST 
//


package org.hl7.fhir.model.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.CodeableConcept;
import org.hl7.fhir.model.Instant;
import org.hl7.fhir.model.SecurityEventAction;
import org.hl7.fhir.model.SecurityEventEvent;
import org.hl7.fhir.model.SecurityEventOutcome;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SecurityEvent.Event", propOrder = {
    "type",
    "subtype",
    "action",
    "dateTime",
    "outcome",
    "outcomeDesc"
})
public class SecurityEventEventImpl
    extends BackboneElementImpl
    implements SecurityEventEvent, ToString
{

    @XmlElement(required = true, type = CodeableConceptImpl.class)
    protected CodeableConceptImpl type;
    @XmlElement(type = CodeableConceptImpl.class)
    protected List<CodeableConcept> subtype;
    @XmlElement(type = SecurityEventActionImpl.class)
    protected SecurityEventActionImpl action;
    @XmlElement(required = true, type = InstantImpl.class)
    protected InstantImpl dateTime;
    @XmlElement(type = SecurityEventOutcomeImpl.class)
    protected SecurityEventOutcomeImpl outcome;
    @XmlElement(type = StringImpl.class)
    protected StringImpl outcomeDesc;

    public CodeableConcept getType() {
        return type;
    }

    public void setType(CodeableConcept value) {
        this.type = ((CodeableConceptImpl) value);
    }

    public List<CodeableConcept> getSubtype() {
        if (subtype == null) {
            subtype = new ArrayList<CodeableConcept>();
        }
        return this.subtype;
    }

    public SecurityEventAction getAction() {
        return action;
    }

    public void setAction(SecurityEventAction value) {
        this.action = ((SecurityEventActionImpl) value);
    }

    public Instant getDateTime() {
        return dateTime;
    }

    public void setDateTime(Instant value) {
        this.dateTime = ((InstantImpl) value);
    }

    public SecurityEventOutcome getOutcome() {
        return outcome;
    }

    public void setOutcome(SecurityEventOutcome value) {
        this.outcome = ((SecurityEventOutcomeImpl) value);
    }

    public org.hl7.fhir.model.String getOutcomeDesc() {
        return outcomeDesc;
    }

    public void setOutcomeDesc(org.hl7.fhir.model.String value) {
        this.outcomeDesc = ((StringImpl) value);
    }

    public java.lang.String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            CodeableConcept theType;
            theType = this.getType();
            strategy.appendField(locator, this, "type", buffer, theType);
        }
        {
            List<CodeableConcept> theSubtype;
            theSubtype = (((this.subtype!= null)&&(!this.subtype.isEmpty()))?this.getSubtype():null);
            strategy.appendField(locator, this, "subtype", buffer, theSubtype);
        }
        {
            SecurityEventAction theAction;
            theAction = this.getAction();
            strategy.appendField(locator, this, "action", buffer, theAction);
        }
        {
            Instant theDateTime;
            theDateTime = this.getDateTime();
            strategy.appendField(locator, this, "dateTime", buffer, theDateTime);
        }
        {
            SecurityEventOutcome theOutcome;
            theOutcome = this.getOutcome();
            strategy.appendField(locator, this, "outcome", buffer, theOutcome);
        }
        {
            org.hl7.fhir.model.String theOutcomeDesc;
            theOutcomeDesc = this.getOutcomeDesc();
            strategy.appendField(locator, this, "outcomeDesc", buffer, theOutcomeDesc);
        }
        return buffer;
    }

}

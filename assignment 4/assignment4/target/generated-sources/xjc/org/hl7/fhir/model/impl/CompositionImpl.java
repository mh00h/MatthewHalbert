//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.02.28 at 10:41:42 AM MST 
//


package org.hl7.fhir.model.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.CodeableConcept;
import org.hl7.fhir.model.Coding;
import org.hl7.fhir.model.Composition;
import org.hl7.fhir.model.CompositionAttester;
import org.hl7.fhir.model.CompositionEvent;
import org.hl7.fhir.model.CompositionSection;
import org.hl7.fhir.model.CompositionStatus;
import org.hl7.fhir.model.DateTime;
import org.hl7.fhir.model.Identifier;
import org.hl7.fhir.model.ResourceReference;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Composition", propOrder = {
    "identifier",
    "date",
    "type",
    "clazz",
    "title",
    "status",
    "confidentiality",
    "subject",
    "author",
    "attester",
    "custodian",
    "event",
    "encounter",
    "section"
})
public class CompositionImpl
    extends ResourceImpl
    implements Composition, ToString
{

    @XmlElement(type = IdentifierImpl.class)
    protected IdentifierImpl identifier;
    @XmlElement(required = true, type = DateTimeImpl.class)
    protected DateTimeImpl date;
    @XmlElement(required = true, type = CodeableConceptImpl.class)
    protected CodeableConceptImpl type;
    @XmlElement(name = "class", type = CodeableConceptImpl.class)
    protected CodeableConceptImpl clazz;
    @XmlElement(type = StringImpl.class)
    protected StringImpl title;
    @XmlElement(required = true, type = CompositionStatusImpl.class)
    protected CompositionStatusImpl status;
    @XmlElement(required = true, type = CodingImpl.class)
    protected CodingImpl confidentiality;
    @XmlElement(required = true, type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl subject;
    @XmlElement(required = true, type = ResourceReferenceImpl.class)
    protected List<ResourceReference> author;
    @XmlElement(type = CompositionAttesterImpl.class)
    protected List<CompositionAttester> attester;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl custodian;
    @XmlElement(type = CompositionEventImpl.class)
    protected CompositionEventImpl event;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl encounter;
    @XmlElement(type = CompositionSectionImpl.class)
    protected List<CompositionSection> section;

    public Identifier getIdentifier() {
        return identifier;
    }

    public void setIdentifier(Identifier value) {
        this.identifier = ((IdentifierImpl) value);
    }

    public DateTime getDate() {
        return date;
    }

    public void setDate(DateTime value) {
        this.date = ((DateTimeImpl) value);
    }

    public CodeableConcept getType() {
        return type;
    }

    public void setType(CodeableConcept value) {
        this.type = ((CodeableConceptImpl) value);
    }

    public CodeableConcept getClazz() {
        return clazz;
    }

    public void setClazz(CodeableConcept value) {
        this.clazz = ((CodeableConceptImpl) value);
    }

    public org.hl7.fhir.model.String getTitle() {
        return title;
    }

    public void setTitle(org.hl7.fhir.model.String value) {
        this.title = ((StringImpl) value);
    }

    public CompositionStatus getStatus() {
        return status;
    }

    public void setStatus(CompositionStatus value) {
        this.status = ((CompositionStatusImpl) value);
    }

    public Coding getConfidentiality() {
        return confidentiality;
    }

    public void setConfidentiality(Coding value) {
        this.confidentiality = ((CodingImpl) value);
    }

    public ResourceReference getSubject() {
        return subject;
    }

    public void setSubject(ResourceReference value) {
        this.subject = ((ResourceReferenceImpl) value);
    }

    public List<ResourceReference> getAuthor() {
        if (author == null) {
            author = new ArrayList<ResourceReference>();
        }
        return this.author;
    }

    public List<CompositionAttester> getAttester() {
        if (attester == null) {
            attester = new ArrayList<CompositionAttester>();
        }
        return this.attester;
    }

    public ResourceReference getCustodian() {
        return custodian;
    }

    public void setCustodian(ResourceReference value) {
        this.custodian = ((ResourceReferenceImpl) value);
    }

    public CompositionEvent getEvent() {
        return event;
    }

    public void setEvent(CompositionEvent value) {
        this.event = ((CompositionEventImpl) value);
    }

    public ResourceReference getEncounter() {
        return encounter;
    }

    public void setEncounter(ResourceReference value) {
        this.encounter = ((ResourceReferenceImpl) value);
    }

    public List<CompositionSection> getSection() {
        if (section == null) {
            section = new ArrayList<CompositionSection>();
        }
        return this.section;
    }

    public java.lang.String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            Identifier theIdentifier;
            theIdentifier = this.getIdentifier();
            strategy.appendField(locator, this, "identifier", buffer, theIdentifier);
        }
        {
            DateTime theDate;
            theDate = this.getDate();
            strategy.appendField(locator, this, "date", buffer, theDate);
        }
        {
            CodeableConcept theType;
            theType = this.getType();
            strategy.appendField(locator, this, "type", buffer, theType);
        }
        {
            CodeableConcept theClazz;
            theClazz = this.getClazz();
            strategy.appendField(locator, this, "clazz", buffer, theClazz);
        }
        {
            org.hl7.fhir.model.String theTitle;
            theTitle = this.getTitle();
            strategy.appendField(locator, this, "title", buffer, theTitle);
        }
        {
            CompositionStatus theStatus;
            theStatus = this.getStatus();
            strategy.appendField(locator, this, "status", buffer, theStatus);
        }
        {
            Coding theConfidentiality;
            theConfidentiality = this.getConfidentiality();
            strategy.appendField(locator, this, "confidentiality", buffer, theConfidentiality);
        }
        {
            ResourceReference theSubject;
            theSubject = this.getSubject();
            strategy.appendField(locator, this, "subject", buffer, theSubject);
        }
        {
            List<ResourceReference> theAuthor;
            theAuthor = (((this.author!= null)&&(!this.author.isEmpty()))?this.getAuthor():null);
            strategy.appendField(locator, this, "author", buffer, theAuthor);
        }
        {
            List<CompositionAttester> theAttester;
            theAttester = (((this.attester!= null)&&(!this.attester.isEmpty()))?this.getAttester():null);
            strategy.appendField(locator, this, "attester", buffer, theAttester);
        }
        {
            ResourceReference theCustodian;
            theCustodian = this.getCustodian();
            strategy.appendField(locator, this, "custodian", buffer, theCustodian);
        }
        {
            CompositionEvent theEvent;
            theEvent = this.getEvent();
            strategy.appendField(locator, this, "event", buffer, theEvent);
        }
        {
            ResourceReference theEncounter;
            theEncounter = this.getEncounter();
            strategy.appendField(locator, this, "encounter", buffer, theEncounter);
        }
        {
            List<CompositionSection> theSection;
            theSection = (((this.section!= null)&&(!this.section.isEmpty()))?this.getSection():null);
            strategy.appendField(locator, this, "section", buffer, theSection);
        }
        return buffer;
    }

}

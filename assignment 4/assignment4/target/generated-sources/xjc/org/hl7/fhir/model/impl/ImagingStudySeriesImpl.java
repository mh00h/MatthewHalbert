//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.02.28 at 10:41:42 AM MST 
//


package org.hl7.fhir.model.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Coding;
import org.hl7.fhir.model.DateTime;
import org.hl7.fhir.model.ImagingStudyInstance;
import org.hl7.fhir.model.ImagingStudySeries;
import org.hl7.fhir.model.InstanceAvailability;
import org.hl7.fhir.model.Integer;
import org.hl7.fhir.model.Modality;
import org.hl7.fhir.model.Oid;
import org.hl7.fhir.model.Uri;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ImagingStudy.Series", propOrder = {
    "number",
    "modality",
    "uid",
    "description",
    "numberOfInstances",
    "availability",
    "url",
    "bodySite",
    "dateTime",
    "instance"
})
public class ImagingStudySeriesImpl
    extends BackboneElementImpl
    implements ImagingStudySeries, ToString
{

    @XmlElement(type = IntegerImpl.class)
    protected IntegerImpl number;
    @XmlElement(required = true, type = ModalityImpl.class)
    protected ModalityImpl modality;
    @XmlElement(required = true, type = OidImpl.class)
    protected OidImpl uid;
    @XmlElement(type = StringImpl.class)
    protected StringImpl description;
    @XmlElement(required = true, type = IntegerImpl.class)
    protected IntegerImpl numberOfInstances;
    @XmlElement(type = InstanceAvailabilityImpl.class)
    protected InstanceAvailabilityImpl availability;
    @XmlElement(type = UriImpl.class)
    protected UriImpl url;
    @XmlElement(type = CodingImpl.class)
    protected CodingImpl bodySite;
    @XmlElement(type = DateTimeImpl.class)
    protected DateTimeImpl dateTime;
    @XmlElement(required = true, type = ImagingStudyInstanceImpl.class)
    protected List<ImagingStudyInstance> instance;

    public Integer getNumber() {
        return number;
    }

    public void setNumber(Integer value) {
        this.number = ((IntegerImpl) value);
    }

    public Modality getModality() {
        return modality;
    }

    public void setModality(Modality value) {
        this.modality = ((ModalityImpl) value);
    }

    public Oid getUid() {
        return uid;
    }

    public void setUid(Oid value) {
        this.uid = ((OidImpl) value);
    }

    public org.hl7.fhir.model.String getDescription() {
        return description;
    }

    public void setDescription(org.hl7.fhir.model.String value) {
        this.description = ((StringImpl) value);
    }

    public Integer getNumberOfInstances() {
        return numberOfInstances;
    }

    public void setNumberOfInstances(Integer value) {
        this.numberOfInstances = ((IntegerImpl) value);
    }

    public InstanceAvailability getAvailability() {
        return availability;
    }

    public void setAvailability(InstanceAvailability value) {
        this.availability = ((InstanceAvailabilityImpl) value);
    }

    public Uri getUrl() {
        return url;
    }

    public void setUrl(Uri value) {
        this.url = ((UriImpl) value);
    }

    public Coding getBodySite() {
        return bodySite;
    }

    public void setBodySite(Coding value) {
        this.bodySite = ((CodingImpl) value);
    }

    public DateTime getDateTime() {
        return dateTime;
    }

    public void setDateTime(DateTime value) {
        this.dateTime = ((DateTimeImpl) value);
    }

    public List<ImagingStudyInstance> getInstance() {
        if (instance == null) {
            instance = new ArrayList<ImagingStudyInstance>();
        }
        return this.instance;
    }

    public java.lang.String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            Integer theNumber;
            theNumber = this.getNumber();
            strategy.appendField(locator, this, "number", buffer, theNumber);
        }
        {
            Modality theModality;
            theModality = this.getModality();
            strategy.appendField(locator, this, "modality", buffer, theModality);
        }
        {
            Oid theUid;
            theUid = this.getUid();
            strategy.appendField(locator, this, "uid", buffer, theUid);
        }
        {
            org.hl7.fhir.model.String theDescription;
            theDescription = this.getDescription();
            strategy.appendField(locator, this, "description", buffer, theDescription);
        }
        {
            Integer theNumberOfInstances;
            theNumberOfInstances = this.getNumberOfInstances();
            strategy.appendField(locator, this, "numberOfInstances", buffer, theNumberOfInstances);
        }
        {
            InstanceAvailability theAvailability;
            theAvailability = this.getAvailability();
            strategy.appendField(locator, this, "availability", buffer, theAvailability);
        }
        {
            Uri theUrl;
            theUrl = this.getUrl();
            strategy.appendField(locator, this, "url", buffer, theUrl);
        }
        {
            Coding theBodySite;
            theBodySite = this.getBodySite();
            strategy.appendField(locator, this, "bodySite", buffer, theBodySite);
        }
        {
            DateTime theDateTime;
            theDateTime = this.getDateTime();
            strategy.appendField(locator, this, "dateTime", buffer, theDateTime);
        }
        {
            List<ImagingStudyInstance> theInstance;
            theInstance = (((this.instance!= null)&&(!this.instance.isEmpty()))?this.getInstance():null);
            strategy.appendField(locator, this, "instance", buffer, theInstance);
        }
        return buffer;
    }

}

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.02.28 at 10:41:42 AM MST 
//


package org.hl7.fhir.model.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.ConformanceOperation1;
import org.hl7.fhir.model.ConformanceQuery;
import org.hl7.fhir.model.ConformanceResource;
import org.hl7.fhir.model.ConformanceRest;
import org.hl7.fhir.model.ConformanceSecurity;
import org.hl7.fhir.model.RestfulConformanceMode;
import org.hl7.fhir.model.Uri;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Conformance.Rest", propOrder = {
    "mode",
    "documentation",
    "security",
    "resource",
    "operation",
    "query",
    "documentMailbox"
})
public class ConformanceRestImpl
    extends BackboneElementImpl
    implements ConformanceRest, ToString
{

    @XmlElement(required = true, type = RestfulConformanceModeImpl.class)
    protected RestfulConformanceModeImpl mode;
    @XmlElement(type = StringImpl.class)
    protected StringImpl documentation;
    @XmlElement(type = ConformanceSecurityImpl.class)
    protected ConformanceSecurityImpl security;
    @XmlElement(required = true, type = ConformanceResourceImpl.class)
    protected List<ConformanceResource> resource;
    @XmlElement(type = ConformanceOperation1Impl.class)
    protected List<ConformanceOperation1> operation;
    @XmlElement(type = ConformanceQueryImpl.class)
    protected List<ConformanceQuery> query;
    @XmlElement(type = UriImpl.class)
    protected List<Uri> documentMailbox;

    public RestfulConformanceMode getMode() {
        return mode;
    }

    public void setMode(RestfulConformanceMode value) {
        this.mode = ((RestfulConformanceModeImpl) value);
    }

    public org.hl7.fhir.model.String getDocumentation() {
        return documentation;
    }

    public void setDocumentation(org.hl7.fhir.model.String value) {
        this.documentation = ((StringImpl) value);
    }

    public ConformanceSecurity getSecurity() {
        return security;
    }

    public void setSecurity(ConformanceSecurity value) {
        this.security = ((ConformanceSecurityImpl) value);
    }

    public List<ConformanceResource> getResource() {
        if (resource == null) {
            resource = new ArrayList<ConformanceResource>();
        }
        return this.resource;
    }

    public List<ConformanceOperation1> getOperation() {
        if (operation == null) {
            operation = new ArrayList<ConformanceOperation1>();
        }
        return this.operation;
    }

    public List<ConformanceQuery> getQuery() {
        if (query == null) {
            query = new ArrayList<ConformanceQuery>();
        }
        return this.query;
    }

    public List<Uri> getDocumentMailbox() {
        if (documentMailbox == null) {
            documentMailbox = new ArrayList<Uri>();
        }
        return this.documentMailbox;
    }

    public java.lang.String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            RestfulConformanceMode theMode;
            theMode = this.getMode();
            strategy.appendField(locator, this, "mode", buffer, theMode);
        }
        {
            org.hl7.fhir.model.String theDocumentation;
            theDocumentation = this.getDocumentation();
            strategy.appendField(locator, this, "documentation", buffer, theDocumentation);
        }
        {
            ConformanceSecurity theSecurity;
            theSecurity = this.getSecurity();
            strategy.appendField(locator, this, "security", buffer, theSecurity);
        }
        {
            List<ConformanceResource> theResource;
            theResource = (((this.resource!= null)&&(!this.resource.isEmpty()))?this.getResource():null);
            strategy.appendField(locator, this, "resource", buffer, theResource);
        }
        {
            List<ConformanceOperation1> theOperation;
            theOperation = (((this.operation!= null)&&(!this.operation.isEmpty()))?this.getOperation():null);
            strategy.appendField(locator, this, "operation", buffer, theOperation);
        }
        {
            List<ConformanceQuery> theQuery;
            theQuery = (((this.query!= null)&&(!this.query.isEmpty()))?this.getQuery():null);
            strategy.appendField(locator, this, "query", buffer, theQuery);
        }
        {
            List<Uri> theDocumentMailbox;
            theDocumentMailbox = (((this.documentMailbox!= null)&&(!this.documentMailbox.isEmpty()))?this.getDocumentMailbox():null);
            strategy.appendField(locator, this, "documentMailbox", buffer, theDocumentMailbox);
        }
        return buffer;
    }

}

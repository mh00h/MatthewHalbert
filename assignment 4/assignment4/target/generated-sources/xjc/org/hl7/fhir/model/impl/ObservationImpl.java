//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.02.28 at 10:41:42 AM MST 
//


package org.hl7.fhir.model.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Attachment;
import org.hl7.fhir.model.CodeableConcept;
import org.hl7.fhir.model.DateTime;
import org.hl7.fhir.model.Identifier;
import org.hl7.fhir.model.Instant;
import org.hl7.fhir.model.Observation;
import org.hl7.fhir.model.ObservationReferenceRange;
import org.hl7.fhir.model.ObservationRelated;
import org.hl7.fhir.model.ObservationReliability;
import org.hl7.fhir.model.ObservationStatus;
import org.hl7.fhir.model.Period;
import org.hl7.fhir.model.Quantity;
import org.hl7.fhir.model.Ratio;
import org.hl7.fhir.model.ResourceReference;
import org.hl7.fhir.model.SampledData;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Observation", propOrder = {
    "name",
    "valueQuantity",
    "valueCodeableConcept",
    "valueAttachment",
    "valueRatio",
    "valuePeriod",
    "valueSampledData",
    "valueString",
    "interpretation",
    "comments",
    "appliesDateTime",
    "appliesPeriod",
    "issued",
    "status",
    "reliability",
    "bodySite",
    "method",
    "identifier",
    "subject",
    "specimen",
    "performer",
    "referenceRange",
    "related"
})
public class ObservationImpl
    extends ResourceImpl
    implements Observation, ToString
{

    @XmlElement(required = true, type = CodeableConceptImpl.class)
    protected CodeableConceptImpl name;
    @XmlElement(type = QuantityImpl.class)
    protected QuantityImpl valueQuantity;
    @XmlElement(type = CodeableConceptImpl.class)
    protected CodeableConceptImpl valueCodeableConcept;
    @XmlElement(type = AttachmentImpl.class)
    protected AttachmentImpl valueAttachment;
    @XmlElement(type = RatioImpl.class)
    protected RatioImpl valueRatio;
    @XmlElement(type = PeriodImpl.class)
    protected PeriodImpl valuePeriod;
    @XmlElement(type = SampledDataImpl.class)
    protected SampledDataImpl valueSampledData;
    @XmlElement(type = StringImpl.class)
    protected StringImpl valueString;
    @XmlElement(type = CodeableConceptImpl.class)
    protected CodeableConceptImpl interpretation;
    @XmlElement(type = StringImpl.class)
    protected StringImpl comments;
    @XmlElement(type = DateTimeImpl.class)
    protected DateTimeImpl appliesDateTime;
    @XmlElement(type = PeriodImpl.class)
    protected PeriodImpl appliesPeriod;
    @XmlElement(type = InstantImpl.class)
    protected InstantImpl issued;
    @XmlElement(required = true, type = ObservationStatusImpl.class)
    protected ObservationStatusImpl status;
    @XmlElement(required = true, type = ObservationReliabilityImpl.class)
    protected ObservationReliabilityImpl reliability;
    @XmlElement(type = CodeableConceptImpl.class)
    protected CodeableConceptImpl bodySite;
    @XmlElement(type = CodeableConceptImpl.class)
    protected CodeableConceptImpl method;
    @XmlElement(type = IdentifierImpl.class)
    protected IdentifierImpl identifier;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl subject;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl specimen;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected List<ResourceReference> performer;
    @XmlElement(type = ObservationReferenceRangeImpl.class)
    protected List<ObservationReferenceRange> referenceRange;
    @XmlElement(type = ObservationRelatedImpl.class)
    protected List<ObservationRelated> related;

    public CodeableConcept getName() {
        return name;
    }

    public void setName(CodeableConcept value) {
        this.name = ((CodeableConceptImpl) value);
    }

    public Quantity getValueQuantity() {
        return valueQuantity;
    }

    public void setValueQuantity(Quantity value) {
        this.valueQuantity = ((QuantityImpl) value);
    }

    public CodeableConcept getValueCodeableConcept() {
        return valueCodeableConcept;
    }

    public void setValueCodeableConcept(CodeableConcept value) {
        this.valueCodeableConcept = ((CodeableConceptImpl) value);
    }

    public Attachment getValueAttachment() {
        return valueAttachment;
    }

    public void setValueAttachment(Attachment value) {
        this.valueAttachment = ((AttachmentImpl) value);
    }

    public Ratio getValueRatio() {
        return valueRatio;
    }

    public void setValueRatio(Ratio value) {
        this.valueRatio = ((RatioImpl) value);
    }

    public Period getValuePeriod() {
        return valuePeriod;
    }

    public void setValuePeriod(Period value) {
        this.valuePeriod = ((PeriodImpl) value);
    }

    public SampledData getValueSampledData() {
        return valueSampledData;
    }

    public void setValueSampledData(SampledData value) {
        this.valueSampledData = ((SampledDataImpl) value);
    }

    public org.hl7.fhir.model.String getValueString() {
        return valueString;
    }

    public void setValueString(org.hl7.fhir.model.String value) {
        this.valueString = ((StringImpl) value);
    }

    public CodeableConcept getInterpretation() {
        return interpretation;
    }

    public void setInterpretation(CodeableConcept value) {
        this.interpretation = ((CodeableConceptImpl) value);
    }

    public org.hl7.fhir.model.String getComments() {
        return comments;
    }

    public void setComments(org.hl7.fhir.model.String value) {
        this.comments = ((StringImpl) value);
    }

    public DateTime getAppliesDateTime() {
        return appliesDateTime;
    }

    public void setAppliesDateTime(DateTime value) {
        this.appliesDateTime = ((DateTimeImpl) value);
    }

    public Period getAppliesPeriod() {
        return appliesPeriod;
    }

    public void setAppliesPeriod(Period value) {
        this.appliesPeriod = ((PeriodImpl) value);
    }

    public Instant getIssued() {
        return issued;
    }

    public void setIssued(Instant value) {
        this.issued = ((InstantImpl) value);
    }

    public ObservationStatus getStatus() {
        return status;
    }

    public void setStatus(ObservationStatus value) {
        this.status = ((ObservationStatusImpl) value);
    }

    public ObservationReliability getReliability() {
        return reliability;
    }

    public void setReliability(ObservationReliability value) {
        this.reliability = ((ObservationReliabilityImpl) value);
    }

    public CodeableConcept getBodySite() {
        return bodySite;
    }

    public void setBodySite(CodeableConcept value) {
        this.bodySite = ((CodeableConceptImpl) value);
    }

    public CodeableConcept getMethod() {
        return method;
    }

    public void setMethod(CodeableConcept value) {
        this.method = ((CodeableConceptImpl) value);
    }

    public Identifier getIdentifier() {
        return identifier;
    }

    public void setIdentifier(Identifier value) {
        this.identifier = ((IdentifierImpl) value);
    }

    public ResourceReference getSubject() {
        return subject;
    }

    public void setSubject(ResourceReference value) {
        this.subject = ((ResourceReferenceImpl) value);
    }

    public ResourceReference getSpecimen() {
        return specimen;
    }

    public void setSpecimen(ResourceReference value) {
        this.specimen = ((ResourceReferenceImpl) value);
    }

    public List<ResourceReference> getPerformer() {
        if (performer == null) {
            performer = new ArrayList<ResourceReference>();
        }
        return this.performer;
    }

    public List<ObservationReferenceRange> getReferenceRange() {
        if (referenceRange == null) {
            referenceRange = new ArrayList<ObservationReferenceRange>();
        }
        return this.referenceRange;
    }

    public List<ObservationRelated> getRelated() {
        if (related == null) {
            related = new ArrayList<ObservationRelated>();
        }
        return this.related;
    }

    public java.lang.String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            CodeableConcept theName;
            theName = this.getName();
            strategy.appendField(locator, this, "name", buffer, theName);
        }
        {
            Quantity theValueQuantity;
            theValueQuantity = this.getValueQuantity();
            strategy.appendField(locator, this, "valueQuantity", buffer, theValueQuantity);
        }
        {
            CodeableConcept theValueCodeableConcept;
            theValueCodeableConcept = this.getValueCodeableConcept();
            strategy.appendField(locator, this, "valueCodeableConcept", buffer, theValueCodeableConcept);
        }
        {
            Attachment theValueAttachment;
            theValueAttachment = this.getValueAttachment();
            strategy.appendField(locator, this, "valueAttachment", buffer, theValueAttachment);
        }
        {
            Ratio theValueRatio;
            theValueRatio = this.getValueRatio();
            strategy.appendField(locator, this, "valueRatio", buffer, theValueRatio);
        }
        {
            Period theValuePeriod;
            theValuePeriod = this.getValuePeriod();
            strategy.appendField(locator, this, "valuePeriod", buffer, theValuePeriod);
        }
        {
            SampledData theValueSampledData;
            theValueSampledData = this.getValueSampledData();
            strategy.appendField(locator, this, "valueSampledData", buffer, theValueSampledData);
        }
        {
            org.hl7.fhir.model.String theValueString;
            theValueString = this.getValueString();
            strategy.appendField(locator, this, "valueString", buffer, theValueString);
        }
        {
            CodeableConcept theInterpretation;
            theInterpretation = this.getInterpretation();
            strategy.appendField(locator, this, "interpretation", buffer, theInterpretation);
        }
        {
            org.hl7.fhir.model.String theComments;
            theComments = this.getComments();
            strategy.appendField(locator, this, "comments", buffer, theComments);
        }
        {
            DateTime theAppliesDateTime;
            theAppliesDateTime = this.getAppliesDateTime();
            strategy.appendField(locator, this, "appliesDateTime", buffer, theAppliesDateTime);
        }
        {
            Period theAppliesPeriod;
            theAppliesPeriod = this.getAppliesPeriod();
            strategy.appendField(locator, this, "appliesPeriod", buffer, theAppliesPeriod);
        }
        {
            Instant theIssued;
            theIssued = this.getIssued();
            strategy.appendField(locator, this, "issued", buffer, theIssued);
        }
        {
            ObservationStatus theStatus;
            theStatus = this.getStatus();
            strategy.appendField(locator, this, "status", buffer, theStatus);
        }
        {
            ObservationReliability theReliability;
            theReliability = this.getReliability();
            strategy.appendField(locator, this, "reliability", buffer, theReliability);
        }
        {
            CodeableConcept theBodySite;
            theBodySite = this.getBodySite();
            strategy.appendField(locator, this, "bodySite", buffer, theBodySite);
        }
        {
            CodeableConcept theMethod;
            theMethod = this.getMethod();
            strategy.appendField(locator, this, "method", buffer, theMethod);
        }
        {
            Identifier theIdentifier;
            theIdentifier = this.getIdentifier();
            strategy.appendField(locator, this, "identifier", buffer, theIdentifier);
        }
        {
            ResourceReference theSubject;
            theSubject = this.getSubject();
            strategy.appendField(locator, this, "subject", buffer, theSubject);
        }
        {
            ResourceReference theSpecimen;
            theSpecimen = this.getSpecimen();
            strategy.appendField(locator, this, "specimen", buffer, theSpecimen);
        }
        {
            List<ResourceReference> thePerformer;
            thePerformer = (((this.performer!= null)&&(!this.performer.isEmpty()))?this.getPerformer():null);
            strategy.appendField(locator, this, "performer", buffer, thePerformer);
        }
        {
            List<ObservationReferenceRange> theReferenceRange;
            theReferenceRange = (((this.referenceRange!= null)&&(!this.referenceRange.isEmpty()))?this.getReferenceRange():null);
            strategy.appendField(locator, this, "referenceRange", buffer, theReferenceRange);
        }
        {
            List<ObservationRelated> theRelated;
            theRelated = (((this.related!= null)&&(!this.related.isEmpty()))?this.getRelated():null);
            strategy.appendField(locator, this, "related", buffer, theRelated);
        }
        return buffer;
    }

}

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.02.28 at 10:41:42 AM MST 
//


package org.hl7.fhir.model.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.CodeableConcept;
import org.hl7.fhir.model.EncounterParticipant;
import org.hl7.fhir.model.ResourceReference;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Encounter.Participant", propOrder = {
    "type",
    "individual"
})
public class EncounterParticipantImpl
    extends BackboneElementImpl
    implements EncounterParticipant, ToString
{

    @XmlElement(type = CodeableConceptImpl.class)
    protected List<CodeableConcept> type;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl individual;

    public List<CodeableConcept> getType() {
        if (type == null) {
            type = new ArrayList<CodeableConcept>();
        }
        return this.type;
    }

    public ResourceReference getIndividual() {
        return individual;
    }

    public void setIndividual(ResourceReference value) {
        this.individual = ((ResourceReferenceImpl) value);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            List<CodeableConcept> theType;
            theType = (((this.type!= null)&&(!this.type.isEmpty()))?this.getType():null);
            strategy.appendField(locator, this, "type", buffer, theType);
        }
        {
            ResourceReference theIndividual;
            theIndividual = this.getIndividual();
            strategy.appendField(locator, this, "individual", buffer, theIndividual);
        }
        return buffer;
    }

}

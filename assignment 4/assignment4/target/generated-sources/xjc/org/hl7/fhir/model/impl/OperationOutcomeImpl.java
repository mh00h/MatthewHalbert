//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.02.28 at 10:41:42 AM MST 
//


package org.hl7.fhir.model.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.OperationOutcome;
import org.hl7.fhir.model.OperationOutcomeIssue;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "OperationOutcome", propOrder = {
    "issue"
})
public class OperationOutcomeImpl
    extends ResourceImpl
    implements OperationOutcome, ToString
{

    @XmlElement(required = true, type = OperationOutcomeIssueImpl.class)
    protected List<OperationOutcomeIssue> issue;

    public List<OperationOutcomeIssue> getIssue() {
        if (issue == null) {
            issue = new ArrayList<OperationOutcomeIssue>();
        }
        return this.issue;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            List<OperationOutcomeIssue> theIssue;
            theIssue = (((this.issue!= null)&&(!this.issue.isEmpty()))?this.getIssue():null);
            strategy.appendField(locator, this, "issue", buffer, theIssue);
        }
        return buffer;
    }

}

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.02.28 at 10:41:42 AM MST 
//


package org.hl7.fhir.model.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Code;
import org.hl7.fhir.model.Coding;
import org.hl7.fhir.model.ConformanceEvent;
import org.hl7.fhir.model.ConformanceEventMode;
import org.hl7.fhir.model.MessageSignificanceCategory;
import org.hl7.fhir.model.ResourceReference;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Conformance.Event", propOrder = {
    "code",
    "category",
    "mode",
    "protocol",
    "focus",
    "request",
    "response",
    "documentation"
})
public class ConformanceEventImpl
    extends BackboneElementImpl
    implements ConformanceEvent, ToString
{

    @XmlElement(required = true, type = CodingImpl.class)
    protected CodingImpl code;
    @XmlElement(type = MessageSignificanceCategoryImpl.class)
    protected MessageSignificanceCategoryImpl category;
    @XmlElement(required = true, type = ConformanceEventModeImpl.class)
    protected ConformanceEventModeImpl mode;
    @XmlElement(type = CodingImpl.class)
    protected List<Coding> protocol;
    @XmlElement(required = true, type = CodeImpl.class)
    protected CodeImpl focus;
    @XmlElement(required = true, type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl request;
    @XmlElement(required = true, type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl response;
    @XmlElement(type = StringImpl.class)
    protected StringImpl documentation;

    public Coding getCode() {
        return code;
    }

    public void setCode(Coding value) {
        this.code = ((CodingImpl) value);
    }

    public MessageSignificanceCategory getCategory() {
        return category;
    }

    public void setCategory(MessageSignificanceCategory value) {
        this.category = ((MessageSignificanceCategoryImpl) value);
    }

    public ConformanceEventMode getMode() {
        return mode;
    }

    public void setMode(ConformanceEventMode value) {
        this.mode = ((ConformanceEventModeImpl) value);
    }

    public List<Coding> getProtocol() {
        if (protocol == null) {
            protocol = new ArrayList<Coding>();
        }
        return this.protocol;
    }

    public Code getFocus() {
        return focus;
    }

    public void setFocus(Code value) {
        this.focus = ((CodeImpl) value);
    }

    public ResourceReference getRequest() {
        return request;
    }

    public void setRequest(ResourceReference value) {
        this.request = ((ResourceReferenceImpl) value);
    }

    public ResourceReference getResponse() {
        return response;
    }

    public void setResponse(ResourceReference value) {
        this.response = ((ResourceReferenceImpl) value);
    }

    public org.hl7.fhir.model.String getDocumentation() {
        return documentation;
    }

    public void setDocumentation(org.hl7.fhir.model.String value) {
        this.documentation = ((StringImpl) value);
    }

    public java.lang.String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            Coding theCode;
            theCode = this.getCode();
            strategy.appendField(locator, this, "code", buffer, theCode);
        }
        {
            MessageSignificanceCategory theCategory;
            theCategory = this.getCategory();
            strategy.appendField(locator, this, "category", buffer, theCategory);
        }
        {
            ConformanceEventMode theMode;
            theMode = this.getMode();
            strategy.appendField(locator, this, "mode", buffer, theMode);
        }
        {
            List<Coding> theProtocol;
            theProtocol = (((this.protocol!= null)&&(!this.protocol.isEmpty()))?this.getProtocol():null);
            strategy.appendField(locator, this, "protocol", buffer, theProtocol);
        }
        {
            Code theFocus;
            theFocus = this.getFocus();
            strategy.appendField(locator, this, "focus", buffer, theFocus);
        }
        {
            ResourceReference theRequest;
            theRequest = this.getRequest();
            strategy.appendField(locator, this, "request", buffer, theRequest);
        }
        {
            ResourceReference theResponse;
            theResponse = this.getResponse();
            strategy.appendField(locator, this, "response", buffer, theResponse);
        }
        {
            org.hl7.fhir.model.String theDocumentation;
            theDocumentation = this.getDocumentation();
            strategy.appendField(locator, this, "documentation", buffer, theDocumentation);
        }
        return buffer;
    }

}

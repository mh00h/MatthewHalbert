//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.02.28 at 10:41:42 AM MST 
//


package org.hl7.fhir.model.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.CodeableConcept;
import org.hl7.fhir.model.Instant;
import org.hl7.fhir.model.Period;
import org.hl7.fhir.model.Provenance;
import org.hl7.fhir.model.ProvenanceAgent;
import org.hl7.fhir.model.ProvenanceEntity;
import org.hl7.fhir.model.ResourceReference;
import org.hl7.fhir.model.Uri;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Provenance", propOrder = {
    "target",
    "period",
    "recorded",
    "reason",
    "location",
    "policy",
    "agent",
    "entity",
    "integritySignature"
})
public class ProvenanceImpl
    extends ResourceImpl
    implements Provenance, ToString
{

    @XmlElement(required = true, type = ResourceReferenceImpl.class)
    protected List<ResourceReference> target;
    @XmlElement(type = PeriodImpl.class)
    protected PeriodImpl period;
    @XmlElement(required = true, type = InstantImpl.class)
    protected InstantImpl recorded;
    @XmlElement(type = CodeableConceptImpl.class)
    protected CodeableConceptImpl reason;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl location;
    @XmlElement(type = UriImpl.class)
    protected List<Uri> policy;
    @XmlElement(type = ProvenanceAgentImpl.class)
    protected List<ProvenanceAgent> agent;
    @XmlElement(type = ProvenanceEntityImpl.class)
    protected List<ProvenanceEntity> entity;
    @XmlElement(type = StringImpl.class)
    protected StringImpl integritySignature;

    public List<ResourceReference> getTarget() {
        if (target == null) {
            target = new ArrayList<ResourceReference>();
        }
        return this.target;
    }

    public Period getPeriod() {
        return period;
    }

    public void setPeriod(Period value) {
        this.period = ((PeriodImpl) value);
    }

    public Instant getRecorded() {
        return recorded;
    }

    public void setRecorded(Instant value) {
        this.recorded = ((InstantImpl) value);
    }

    public CodeableConcept getReason() {
        return reason;
    }

    public void setReason(CodeableConcept value) {
        this.reason = ((CodeableConceptImpl) value);
    }

    public ResourceReference getLocation() {
        return location;
    }

    public void setLocation(ResourceReference value) {
        this.location = ((ResourceReferenceImpl) value);
    }

    public List<Uri> getPolicy() {
        if (policy == null) {
            policy = new ArrayList<Uri>();
        }
        return this.policy;
    }

    public List<ProvenanceAgent> getAgent() {
        if (agent == null) {
            agent = new ArrayList<ProvenanceAgent>();
        }
        return this.agent;
    }

    public List<ProvenanceEntity> getEntity() {
        if (entity == null) {
            entity = new ArrayList<ProvenanceEntity>();
        }
        return this.entity;
    }

    public org.hl7.fhir.model.String getIntegritySignature() {
        return integritySignature;
    }

    public void setIntegritySignature(org.hl7.fhir.model.String value) {
        this.integritySignature = ((StringImpl) value);
    }

    public java.lang.String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            List<ResourceReference> theTarget;
            theTarget = (((this.target!= null)&&(!this.target.isEmpty()))?this.getTarget():null);
            strategy.appendField(locator, this, "target", buffer, theTarget);
        }
        {
            Period thePeriod;
            thePeriod = this.getPeriod();
            strategy.appendField(locator, this, "period", buffer, thePeriod);
        }
        {
            Instant theRecorded;
            theRecorded = this.getRecorded();
            strategy.appendField(locator, this, "recorded", buffer, theRecorded);
        }
        {
            CodeableConcept theReason;
            theReason = this.getReason();
            strategy.appendField(locator, this, "reason", buffer, theReason);
        }
        {
            ResourceReference theLocation;
            theLocation = this.getLocation();
            strategy.appendField(locator, this, "location", buffer, theLocation);
        }
        {
            List<Uri> thePolicy;
            thePolicy = (((this.policy!= null)&&(!this.policy.isEmpty()))?this.getPolicy():null);
            strategy.appendField(locator, this, "policy", buffer, thePolicy);
        }
        {
            List<ProvenanceAgent> theAgent;
            theAgent = (((this.agent!= null)&&(!this.agent.isEmpty()))?this.getAgent():null);
            strategy.appendField(locator, this, "agent", buffer, theAgent);
        }
        {
            List<ProvenanceEntity> theEntity;
            theEntity = (((this.entity!= null)&&(!this.entity.isEmpty()))?this.getEntity():null);
            strategy.appendField(locator, this, "entity", buffer, theEntity);
        }
        {
            org.hl7.fhir.model.String theIntegritySignature;
            theIntegritySignature = this.getIntegritySignature();
            strategy.appendField(locator, this, "integritySignature", buffer, theIntegritySignature);
        }
        return buffer;
    }

}
